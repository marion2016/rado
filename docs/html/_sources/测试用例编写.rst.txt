测试用例编写
~~~~~~~~~~~~

-  接口测试用例表说明_
-  实例_

.. _`接口测试用例表说明`:

接口测试用例表说明
------------------

基于要因分析表编写测试用例，包含接口相关信息，如请求方法、URL、参数、预期返回值等信息。

其中，Excel至少包含如下19个字段，并且顺序与名称需要相同。


| Case Id       | Name             | Component   | Status     | Priority   | Labels   | Precondition                   | Test Script (Step-by-Step) - Step   | Test Script (Step-by-Step) - Test Data   | Test Script (Step-by-Step) - Expected Result   | Category   | Automated   | Method   | Url                                                           | Status Code   | Checkpoints                                                                                                                                                                        | Validators   | Parameterize   | Import Version   |

| Insert\_001   | 插入接口空参数   | 用户注册    | Approved   | Low        | Smoke    | 1.系统部署完成2.插入接口可用   | 1.调用数据插入接口 2.插入{ }        | { "test\_para\_a": "sys.cpu.nice" }      | 1.插入失败 2.respones消息提示正确              | 异常系     | 2           | GET      | `/api/tests/ <http://192.168.20.47:8080/datanode/simple>`__   | 422           | { "code":"422", "detail": { "test\_para\_a":["Missing data for required field."], "test\_para\_b":["Missing data for required field."] }, "message":"bf7c4257036e821a8c931d25" }   |              |                | 1.0.0            |


-  Status
   ：测试用例状态，枚举值，\ ``Approved``\为已评审的用例，\ ``Draft``\为草稿，即创建未评审，\ ``Deprecated``\为已废弃的用例
-  Priority：用例等级：\ ``High``\，\ ``Normal``\，\ ``Low``\,对应用例等级高/中/低
-  Labels：标签，非必填，如可以加上标签标记一个冒烟测试用例
-  Automated：该值为\ ``2``\ 表示该条用例为自动执行，值为\ ``1``\ 
-  Test Data： 该用例的接口请求参数
-  Method： 接口请求方法
-  Url： 接口的endpoint
-  Status Code： 接口返回的状态码
-  Checkpoints
   ：为接口预期返回结果检查项。若为字典，会将该字典中的每个key：value取出与返回的body进行逐项对比，若为列表或空，会进行全等对比
-  Validators： 标记结果验证器的验证方式，详见验证器 `validate`_

-  Parameterize : 该条用例是否需要进行参数化.
   值为\ ``1``\ 需要参数化,值为\ ``0``\ 不需要参数化
-  Import Version：标记用例创建版本，必填

.. _`实例`:

实例
----

需测试接口信息：

::

    url：/api/tests

    parameters:
        "test_para_a"
            description: "the tests api's first para"
            required: true
            type: string
        
        "test_para_b"
            description: "the tests api's first para"
            required: true
            type: int
            
    respons:
        200:
            {
                "status_code": 200,
                "content": {
                    "para_a":"sys.cpu.nice",
                    "para_b":1531719554123
                }
            }

        422:
            {
                "code":"422",
                "detail":
                {
                    "test_para_a":["Missing data for required field."],
                    "test_para_b":["Missing data for required field."]
                },
                "message":"\u8bf7\u6c42\u6570\u636e\u6821\u9a8c\u5931\u8d25"
                }
            }
            

接口测试用例编写：


| Case Id       | Name                      | Component   | Status     | Priority   | Labels   | Precondition                   | Test Script (Step-by-Step) - Step                                                                            | Test Script (Step-by-Step) - Test Data                                | Test Script (Step-by-Step) - Expected Result   | Category   | Automated   | Method   | Url                                                           | Status Code   | Checkpoints                                                                                                                                                                        | Validators   | Parameterize   | Import Version   |
+===============+===========================+=============+============+============+==========+================================+==============================================================================================================+=======================================================================+================================================+============+=============+==========+===============================================================+===============+====================================================================================================================================================================================+==============+================+==================+
| Insert\_001   | 插入接口空参数            | 用户注册    | Approved   | Low        | Smoke    | 1.系统部署完成2.插入接口可用   | 1.调用数据插入接口 2.插入{ }                                                                                 | {}                                                                    | 1.插入失败 2.respones消息提示正确              | 异常系     | 2           | POST     | `/api/tests/ <http://192.168.20.47:8080/datanode/simple>`__   | 422           | { "code":"422", "detail": { "test\_para\_a":["Missing data for required field."], "test\_para\_b":["Missing data for required field."] }, "message":"bf7c4257036e821a8c931d25" }   |              | 1              | 1.0.0            |

| Insert\_002   | 测试value参数缺失插入     | 用户注册    | Approved   | Normal     |          | 1.系统部署完成2.插入接口可用   | 1.调用数据插入接口 2.插入{"metric":"cpu", "timestamp":14785269422, tags:{"tag1":"name1" } }                  | { "test\_para\_a": "sys.cpu.nice" }                                   | 1.插入失败 2.respones消息提示正确              | 异常系     | 2           | POST     | `/api/tests/ <http://192.168.20.47:8080/datanode/simple>`__   | 422           | { "code":"422", "detail": { "test\_para\_a":["Missing data for required field."], "test\_para\_b":["Missing data for required field."] }, "message":"bf7c4257036e821a8c931d25" }   |              | 1              | 1.0.1            |

| Insert\_003   | 测试value为值为null插入   | 用户注册    | Approved   | Low        |          | 1.系统部署完成2.插入接口可用   | 1.调用数据插入接口 2.插入{"metric":"cpu", "timestamp":14785269422, "value":null "tags":{"tag1":"name2" } }   | { "test\_para\_a": "sys.cpu.nice", "test\_para\_b": 1531719554123 }   | 1.插入失败 2.respones消息提示正确              | 异常系     | 2           | POST     | `/api/tests/ <http://192.168.20.47:8080/datanode/simple>`__   | 200           | { "para\_a":"sys.cpu.nice", "para\_b":1531719554123 }                                                                                                                              | 1            | 1              | 1.0.2            |




.. _`validate`:

validate
>>>>>>>>>

-  验证原理
-  验证方式

验证原理
>>>>>>>>

::

    # 全等验证（validate不填写）
    # 接口实际返回值resp_body:
    {
        "code":"422",
        "detail":
        {
            "test_para_a":["Missing data for required field."],
            "test_para_b":["Missing data for required field."]
        },
        "message":"\u8bf7\u6c42\u6570\u636e\u6821\u9a8c\u5931\u8d25"
    }

    # checkpoints:
    {
        "code":"422",
        "detail":
        {
            "test_para_a":["Missing data for required field."],
            "test_para_b":["Missing data for required field."]
        },
        "message":"\u8bf7\u6c42\u6570\u636e\u6821\u9a8c\u5931\u8d25"
    }

::

    # 部分验证（validate=0）
    # 接口实际返回值resp_body:
    {
        "code":"422",
        "detail":
        {
            "test_para_a":["Missing data for required field."],
            "test_para_b":["Missing data for required field."]
        },
        "message":"\u8bf7\u6c42\u6570\u636e\u6821\u9a8c\u5931\u8d25"
    }

    # checkpoints:
    {
        "code":"422",
        "test_para_a":["Missing data for required field."],
        "test_para_b":["Missing data for required field."]
    }

验证方式
>>>>>>>>

-  全等验证
-  部分验证

全等验证
>>>>>>>>

``validate`` 字段为空时, 对整体进行全等验证

    assert 语句为: ``assert resp_body == checkpoints``

部分验证
>>>>>>>>

``validate= 0``, 验证resp\_body 中的某个key
的value是否包含在checkpoints对应key的value中.

    step1：先取到 需要验证的 key，即checkpoints.keys()

    step2：在resp\_body 对获取key的value值如下，$..key获取resp\_body
    所有key的值

    ``resp_data = jsonpath("resp_body", "$..key")``

    step3：对于唯一key，去全等验证，对于存在重复key
    ，适用于"=="或者"in"，如下例中id填写一个也可以

::

    部分验证，在 返回的response中带有 随机id 的场景就比较方便，或者返回中response内容比较多
    而我们需要去 check一些比较重要的字段。

    部分验证，对于返回的response 有多个重复 字段的， 用列表处理，如 
    # 接口实际返回值resp_body:
    {
        "code":"200",
        "data":[{
            "id":"123456"
        },
        {
            "id":"654321"
        }
        ]
    }
    # checkpoints:
    {
        "code":"200",
        "id":["123456","654321"] # ”==“
    }
    {
        "code":"200",
        "id":["123456"] # ”in“
    }不